<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Btn_backToRoute.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEYAAABGCAYAAABxLuKEAAAABGdBTUEAALGPC/xhBQAAAQZJREFUeF7t
        2z1qw0AURWGtxUW2IQmp8CZSGpd2/twlhuw5jTG2r+AJJubOKw1G54OHxEx3Go1AagAAAADgCYzjuIpb
        zLquO2rObdu+xhIU40tRrjGnYRheYmu5+r7/KaJcFGkTW8tFFIMoBlEMohhEMYhiEMUgikEUgygGUQyi
        GEQxFOGbKHeIYhDFIIpBFIMohh7J70WUaT5ja9kU5pcwFVOMMs50sIstECdBnISCfBCngjgJ4iQU498Z
        hzgF4iSIkyBOQi+Xb8SpIE6COAkF2ROngjgJ4iQizoU4BnESCrIjToWCbIlToRiHOYyGT+ZLCrLVQfBP
        13UsYcZvOQAAAAAepmlum99Z5pvbDfwAAAAASUVORK5CYII=
</value>
  </data>
</root>