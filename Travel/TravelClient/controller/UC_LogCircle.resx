<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>